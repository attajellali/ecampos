<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
						http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<context:component-scan base-package="pe.gob.mininter" />	
	
	<context:property-placeholder location="WEB-INF/jdbc.properties" />
	
	<import resource="security-config.xml" />
	<import resource="Spring-Mail.xml" />
	
	<!-- Programar tareas automaticas -->
	<bean id="procesosJob" class="pe.gob.mininter.utiles.Proceso"/>
	
	<bean id="procesoDetail"  class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">  
		<property name="targetObject" ref="procesosJob" />  
		<property name="targetMethod" value="ejecutarProceso" />  
		<property name="concurrent" value="false" />
	</bean>
			
	<bean id="cronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">  
		<property name="jobDetail" ref="procesoDetail" /> 
		<!-- Se lanza la tarea todos los dias 
		Con la propiedad cronExpression indicamos la fecha en la que deberá ejecutar la tarea, 
		los valores hacen referencia a los siguientes datos (de izquierda a derecha):
		    * segundos (0 - 59)
		    * minutos (0 - 59)
		    * horas (0 - 23)
		    * día del mes (0 - 31)
		    * mes (1 - 12)
		    * día de la semana (MON-SUN)		
		-->  
		<property name="cronExpression" value="1 1 * * * ?" />  
	</bean> 
	 
	 <bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">  
		<property name="triggers">  
			<ref bean="cronTrigger" />  
		</property>  
	</bean>

	<!-- Fin de tarea programada -->
	 
	<tx:annotation-driven transaction-manager="txManager"/>
	
    <bean id="txManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager"> 
         <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
	    <property name="dataSource" ref="dataSource"/>
	    <property name="configLocation">
	    	<value>classpath:hibernate.cfg.xml</value>
	  	</property>
	  	<property  name="configurationClass">
	   		<value>org.hibernate.cfg.AnnotationConfiguration</value>
	  	</property>
	    <property name="hibernateProperties">
	    <!-- org.hibernate.dialect.MySQLDialect -->
	      <value>
	      	hibernate.bytecode.provider=javassist
			hibernate.dialect=org.hibernate.dialect.Oracle10gDialect
	        hibernate.show_sql=false
	        hibernate.format_sql=false
	        hibernate.connection.autocommit=false
	        hibernate.connection.release_mode=after_transaction  
	      </value>
	    </property>
  	</bean>
	
	<bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource"> 
		<property name="driverClass" value="${jdbc.driverClass}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>
  	
  	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basename" value="classpath:org/springframework/security/messages"/>
	</bean>
	
</beans>
